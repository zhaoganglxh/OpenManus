# Global LLM configuration
[llm]
model = "Qwen/QwQ-32B"                       # The LLM model to use
base_url = "https://api.siliconflow.cn/v1" # API endpoint URL
api_key = "sk-dmtzbscxyyaijoprsokdsxcjxazjrvrgzxhinvkwgomkonhg"                     # Your API key
max_tokens = 8192                      # Maximum number of tokens in the response
temperature = 0.0                      # Controls randomness
# max_input_tokens = 100000            # Maximum input tokens to use across all requests (set to null or delete this line for unlimited)

# [llm] #AZURE OPENAI:
# api_type= 'azure'
# model = "YOUR_MODEL_NAME" #"gpt-4o-mini"
# base_url = "{YOUR_AZURE_ENDPOINT.rstrip('/')}/openai/deployments/{AZURE_DEPOLYMENT_ID}"
# api_key = "AZURE API KEY"
# max_tokens = 8096
# temperature = 0.0
# api_version="AZURE API VERSION" #"2024-08-01-preview"

# [llm] #OLLAMA:
# api_type = 'ollama'
# model = "llama3.2"
# base_url = "http://localhost:11434/v1"
# api_key = "ollama"
# max_tokens = 4096
# temperature = 0.0

# Optional configuration for specific LLM models
[llm.vision]
model = "Qwen/QwQ-32B"                       # The vision model to use
base_url = "https://api.siliconflow.cn/v1" # API endpoint URL for vision model
api_key = "sk-dmtzbscxyyaijoprsokdsxcjxazjrvrgzxhinvkwgomkonhg"                     # Your API key for vision model
max_tokens = 8192                      # Maximum number of tokens in the response
temperature = 0.0                      # Controls randomness for vision model

# [llm.vision] #OLLAMA VISION:
# api_type = 'ollama'
# model = "llama3.2-vision"
# base_url = "http://localhost:11434/v1"
# api_key = "ollama"
# max_tokens = 4096
# temperature = 0.0

# Optional configuration for specific browser configuration
#[browser]
# Whether to run browser in headless mode (default: false)
#headless = false
# Disable browser security features (default: true)
#disable_security = true
# Extra arguments to pass to the browser
#extra_chromium_args = []
# Path to a Chrome instance to use to connect to your normal browser
# e.g. '/Applications/Google Chrome.app/Contents/MacOS/Google Chrome'
#chrome_instance_path = "/opt/google/chrome/chrome"
# Connect to a browser instance via WebSocket
#wss_url = ""
# Connect to a browser instance via CDP
#cdp_url = ""

# Optional configuration, Proxy settings for the browser
[browser.proxy]
#server = "http://127.0.0.1:10809"
#username = "proxy-username"
# password = "proxy-password"

# Optional configuration, Search settings.
#[search]
# Search engine for agent to use. Default is "Google", can be set to "Baidu" or "DuckDuckGo".
#engine = "Google"
